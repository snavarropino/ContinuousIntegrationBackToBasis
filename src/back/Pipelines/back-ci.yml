resources:
- repo: self
queue:
  name: Hosted VS2017

trigger:
  batch: true 
  branches:
    include:
    - main
  paths:
    include: 
    - /src/back

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore

    projects: '**/*.csproj'

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Preparing SonarCloud analysis'
  inputs:
    SonarCloud: SonarCloudConnection
    organization: 'ci-back-to-basis'
    projectKey: 'ci-back-to-basis-key'
    extraProperties: |
      sonar.exclusions=**/obj/**,**/*.dll
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
      sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx    

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'

    arguments: '--configuration $(BuildConfiguration)'


- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test

    projects: '**/*.*Test.csproj'

    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'
  
- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'    

- task: DotNetCoreCLI@2
  displayName: Dotnet Publish Api
  inputs:
    command: publish

    projects: '**/Api.csproj'
    publishWebProjects: False

    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/Api'

    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Api'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/Api'

    ArtifactName: dropApi
